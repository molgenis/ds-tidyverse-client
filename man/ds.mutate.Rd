% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ds.mutate.R
\name{ds.mutate}
\alias{ds.mutate}
\title{Clientside dplyr mutate function}
\usage{
ds.mutate(
  df.name = NULL,
  tidy_select = NULL,
  newobj = NULL,
  .keep = "all",
  .before = NULL,
  .after = NULL,
  datasources = NULL
)
}
\arguments{
\item{df.name}{Character specifying a serverside data frame or tibble.}

\item{tidy_select}{List of Tidyselect syntax to be passed to dplyr::mutate}

\item{newobj}{Character specifying name for new server-side data frame.}

\item{.keep}{Control which columns from .data are retained in the output. Grouping columns and
columns created by ... are always kept. "all" retains all columns from .data. This is the default.
"used" retains only the columns used in `tidy_select` to create new columns. "unused" retains
only the columns not used in `tidy_select` to create new columns. This is useful if you generate
new columns, but no longer need the columns used to generate them. "none" doesn't retain any
extra columns from `df.name`. Only the grouping variables and columns created by `tidy_select`
are kept.}

\item{.before}{<tidy-select> Optionally, control where new columns should appear (the default is
to add to the right hand side). See `relocate` for more details.}

\item{.after}{<tidy-select> Optionally, control where new columns should appear (the default is
to add to the right hand side). See `relocate` for more details.}

\item{datasources}{datashield connections object.}
}
\value{
One or more new columns created on the serverside data frame specified in the \code{newobj}.
}
\description{
DataSHIELD implementation of \code{dplyr::mutate}.
}
\details{
Performs dplyr mutate
}
